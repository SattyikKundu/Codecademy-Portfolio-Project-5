# ============================
# PostgreSQL Database Config
# ============================
# NOTE: change these later when uploading on Netlify/Render/Heroku/Neon

DATABASE_URL='your-database-url-from-hosting-provider-like-Neon-or-Heroku'

# Edit these as needed
DB_USER='postgres'                # database username
DB_PASSWORD='database-password'   # database password
DB_HOST='localhost'               # database host ('localhost' or otherwise)
DB_NAME='database-name'           # database name  
DB_PORT=5432                      # PostgreSQL port (default= 5432)

# =================================================
# ENVIRONMENT VARIABLES - DO NOT SHARE PUBLICLY
# Used for authentication, sessions, and OAuth
# =================================================

# Use below line in cmd line terminal to get 64 character 
# random string for JWT and Session secret strings 
# (NOTE: because 1 byte = 2 hex characters, the secret(s) have 128 characters each):
#
# node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"

# JWT secret for signing user tokens
JWT_SECRET=yourSuperSecretJWTKey

# Session secret for express-session (used by Passport Google OAuth)
SESSION_SECRET=anotherRandomSecureString


# ========================================================================
# Google OAuth environment variables (get from Google Cloud Console) 
# ========================================================================
# How to get Google OAuth Client ID and Client Secret:
#
# 1.   First, go to "https://console.cloud.google.com/". 
#      - Log into your Google account that will "own" (or be connected to) this project app .
#
# 2.   On left side menu, navigate to: 
#      - APIs & Services (on left sidebar) ---> Credentials (Client Id found here)
#
# 3.   If the client ID and secret arent visibile, fill out the required App
#      information in order to get Client ID and Secret.
#
# 4.1. During the form fillout, here are a few tips:
#      - When providing authorized redirect URI for Google auth., it must EXACTLY match
#        the backend route exactly. For this app, add the following authorized redirect URI 
#        in Google Cloud Console: 
#        http://localhost:5000/auth/google/callback
#
#        Note: "/auth/google/callback" route is found in "../routes/authRoutes.js" file.
#
# 4.2  Also,If app deploying online (e.g. Vercel, Netlify, etc), add the deployed callback URI as well:
#        https://your-domain.com/auth/google/callback
#
# 5.   After creation, your Client ID and Secret will be shown. 
#      Also, download and save them since client secret is only shown ONCE
#      (can't be access later unlike CLient ID) 
# ========================================================================

GOOGLE_CLIENT_ID=yourGoogleClientID.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=yourGoogleClientSecret

GOOGLE_CALLBACK_URL='/auth/google/callback' # This is true on localhost, but may need to be edited when hosting on web


# Port URL for app frontend, or client-side.
CLIENT_HOME_URL=http://localhost:3000 # Default port url for app frontend/client-side during local development.

# When deploying to production (e.g., Netlify + Heroku), update to something like this (and comment out above):
# CLIENT_HOME_URL=https://your-app-name.netlify.app



# Secret Key from personal 'Stripe' account used to create a stipe instance.
# During payout, this instance sends record of payment amount in checkout to Stripe dashboard. 
STRIPE_SECRET_KEY=stripe-secret-key-from-your-stripe-account

# ==================================================================================
# IMPORTANT NOTES FOR DEPLOYMENT
# - In Heroku, you MUST set these variables in the "Settings > Config Vars" section.
# - Do NOT include this .env file in GitHub or version control.
# - Update CORS in server.js to match the deployed frontend domain:
#     origin: 'https://your-app-name.netlify.app'
# - Make sure secure cookies and SameSite settings are set properly:
#     secure: true (for production HTTPS)
#     sameSite: 'none' (to prevent cookies from being blocked)
# ==================================================================================
